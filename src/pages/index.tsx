import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import { ApiPromise, WsProvider } from '@polkadot/api';
import { ContractPromise } from '@polkadot/api-contract';
import { BN, BN_ONE } from "@polkadot/util";
import type { WeightV2 } from '@polkadot/types/interfaces'
import '@polkadot/api-augment'
import { InjectedAccountWithMeta } from "@polkadot/extension-inject/types";
import { useState, useEffect } from 'react'
const { Keyring } = require('@polkadot/keyring');
import { css } from "@emotion/react";


import ConnectWalletButton from '@/components/ConnectWalletButton';
import GetContractButton from '@/components/GetContractButton';
import TotalSupply from '@/components/TotalSupply';
import GetTokens from '@/components/GetTokens';
import Mint from '@/components/Mint';
import Claim0Token from '@/components/Claim0Token';
import GetStatus from '@/components/GetStatus';
import EatAnApple from '@/components/EatAnApple';
import TokenUri from '@/components/TokenUri';

import mainMetadata from "./metadata.json";
import myPsp37Metadata from "./my_psp37_enumerable.json";
import SetDeathStatus from '@/components/SetDeathStatus';
import Psp37BaseUri from '@/components/Psp37BaseUri';

import { setDeathStatus } from '@/components/SetDeath';

import { Abi } from '@polkadot/api-contract';

// metadataの設定
const metadata = new Abi(mainMetadata);
const psp37metadata = new Abi(myPsp37Metadata);


const inter = Inter({ subsets: ['latin'] })

const storageDepositLimit = null;

const apiKey = process.env.NEXT_PUBLIC_MNEMONIC;
const DAILY_AMOUNT = 100;

const override = css`
    display: block;
    margin: 0 auto;
    border-color: red;
  `;


const mainContractAddress = "YYn9H63s8eKogSoE3jAprEszMo7KM8K415fGFnxp92Szb7t"
const psp37ContractAddress = "Wdfab9ufHYsthx4k5zaNmrRn6J1two8U8H92BUwEETCXMcC"
  
// main().then(() => console.log('completed'))

export default function Home() {
  const [address, setAddress] = useState('');
  const [source, setSource] = useState('');
  const [account, setAccount] = useState<InjectedAccountWithMeta | null>(null);;
  const [api, setApi] = useState<ApiPromise | null>(null);


  const [totalSupply, setTotalSupply] = useState('');
  
  const [tokenUri, setTokenUri] = useState<String>('');
  const [nftName, setNftName] = useState('');
  const [nftDescription, setNftDescription] = useState('');
  const [nftImageUri, setNftImageUri] = useState('');
  const [outputs, setOutputs] = useState<string[]>([]);

  const [contractAddress, setContractAddress] = useState('');

  // mainコントラクトの結果
  const [mainContract, setMainContract] = useState<ContractPromise | null>(null);
  const [getMainContractResult, setGetMainContractResult] = useState("");

  // psp37コントラクトの結果
  const [psp37Contract, setPsp37Contract] = useState<ContractPromise | null>(null);
  const [getPsp37ContractResult, setGetPsp37ContractResult] = useState("");

  const [tokenId, setTokenId] = useState('');;
  const [baseUri, setBaseUri] = useState('');;

  const [status, setStatus] = useState('');;


  const [hungryStatus, setHungryStatus] = useState<string | number | null>(null);
  const [healthStatus, setHealthStatus] = useState<string | number | null>(null);
  const [happyStatus, setHappyStatus] = useState<string | number | null>(null);

  const [psp37BaseUri, setPsp37BaseUri] = useState<string>("");

  const handleConnected = (account: InjectedAccountWithMeta, address: string, source: string) => {
    setAccount(account);
    setAddress(address);
    setSource(source);
  };

  const gasLimit: any = api?.registry.createType("WeightV2", {
    refTime: new BN(100_000_000_000),
    proofSize: new BN(1_000_000),
  });

  async function extractNameFromTokenUri() {

      if (typeof tokenUri === 'string') {
        let url = `https://cloudflare-ipfs.com/ipfs/${tokenUri.replace('ipfs://', '')}`;
        const response = await fetch("https://cloudflare-ipfs.com/ipfs/QmYJhYes1kzp2soWYEYKzvA84V8YivL8BCpsnN773xyufr/1.json");
        console.log("response",response)
        const json = await response.json();
        console.log("json",json)
        const name = json.name;
        const description = json.description;
        const image = json.image;
        const imate_uri =  `https://cloudflare-ipfs.com/ipfs/${image.replace('ipfs://', '')}`;
        setNftName(name || "");
        setNftDescription(description || "");
        setNftImageUri(imate_uri || "");
        // return name;
      } 
  }
  


  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <h1 style={{marginBottom: "80px"}}>Get Your Contract Information(psp34)</h1>
        <div className={styles.description}>
          <div>
            <ConnectWalletButton onConnected={handleConnected} />

            contractAddress:<input  style={{width: "400px"}} type="text" value={contractAddress} onChange={(e) => setContractAddress(e.target.value)} />
            <h6 style={{color: "red",marginBottom: "20px",fontWeight: 300}}>
              contracts made by ArtZero can be set<br/>
              https://github.com/ArtZero-io/Contracts/tree/feature/ink-4-version/Azero_Contracts/contracts/psp34_standard
            </h6>

            <GetContractButton contractAddress={mainContractAddress} metadata={metadata} setApi={setApi} setContract={setMainContract} setGetContractResult={setGetMainContractResult}/>

            {getMainContractResult && <p>Get Contract result: {getMainContractResult}</p>}

            baseURI:<input  style={{width: "400px"}} type="text" value={baseUri} onChange={(e) => setBaseUri(e.target.value)} />
            <h6 style={{color: "red",marginBottom: "20px",fontWeight: 300}}>
              Now only ipfs can be set<br/>
              ex1. set ipfs://QmYJhYes1kzp2soWYEYKzvA84V8YivL8BCpsnN773xyufr/<br/>
              ex2. set ipfs://QmXtnr9aEJVywiLs1keZdyiKbQwignZT3FhwKYivF15oZp/<br/>
            </h6>

            <Mint contract={mainContract} account={account} gasLimit={gasLimit} />
            
            <TotalSupply contract={mainContract} address={address} totalSupply={totalSupply} setTotalSupply={setTotalSupply}/>

            <GetStatus contract={mainContract} address={address} gasLimit={gasLimit} hungryStatus={hungryStatus} healthStatus={healthStatus} happyStatus={happyStatus} setHungryStatus={setHungryStatus} setHealthStatus={setHealthStatus} setHappyStatus={setHappyStatus}/>

            <GetTokens contract={mainContract} address={address} gasLimit={gasLimit} totalSupply={totalSupply} setOutputs={setOutputs}/>

            <SetDeathStatus contract={mainContract} account={account} gasLimit={gasLimit}/>


            <EatAnApple contract={mainContract} account={account} gasLimit={gasLimit}/>

            <button onClick={extractNameFromTokenUri}>Extract Name</button>
            {nftName && <p>nftName: {nftName}</p>}
            {nftDescription && <p>nftDescription: {nftDescription}</p>}
            {nftImageUri && (
            <>
              <h4 style={{marginBottom: "10px"}}>Image</h4>
              <img src={nftImageUri} alt="Image"  width="300" height="300" />
            </>
            
            )}
      {/* 追加：取り出された name を表示 */}
      {/* {name && <p>Name: {name}</p>} */}

            <TokenUri contract={mainContract} address={address} gasLimit={gasLimit} setTokenUri={setTokenUri} />
            
            {tokenUri && <p>tokenUri: {tokenUri}</p>}
            <>
              {outputs.map((output, index) => (
                <div key={index}>
                  <p>Token ID: {output}</p>
                  {/* ここにその他の表示内容を追加 */}
                </div>
              ))}
            </>

            tokenID:<input  style={{width: "400px",marginTop: "20px"}} type="text" value={tokenId} onChange={(e) => setTokenId(e.target.value)} />

            {tokenUri && <p style={{marginBottom: "20px"}}>TokenURI: {tokenUri}</p>}
            {nftName && <p style={{marginBottom: "20px"}}>Name: {nftName}</p>}
            {nftDescription && <p style={{marginBottom: "20px"}}>Description: {nftDescription}</p>}
            {nftImageUri && (
            <>
              <h4 style={{marginBottom: "10px"}}>Image</h4>
              <img src={nftImageUri} alt="Image"  width="300" height="300" />
            </>
            
            )}

            tokenID:<input  style={{width: "400px",marginTop: "20px"}} type="text" value={tokenId} onChange={(e) => setTokenId(e.target.value)} />

            {tokenUri && <p style={{marginBottom: "20px"}}>Status: {status}</p>}

            <GetContractButton contractAddress={psp37ContractAddress} metadata={psp37metadata} setApi={setApi} setContract={setPsp37Contract} setGetContractResult={setGetPsp37ContractResult}/>

            {getPsp37ContractResult && <p>Get Contract result: {getPsp37ContractResult}</p>}

            <Psp37BaseUri contract={psp37Contract} address={address} gasLimit={gasLimit} setPsp37BaseUri={setPsp37BaseUri}/>
            {psp37BaseUri && <p>Get Contract result: {psp37BaseUri}</p>}

            <Claim0Token contract={psp37Contract} account={account} gasLimit={gasLimit} />

          </div>
        </div>
      </main>
    </>
  )
}
